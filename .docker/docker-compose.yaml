name: symfony-app

services:
  nginx:
    container_name: nginx
    ports:
      - 80:80
    build:
      context: ./../
      dockerfile: ./.docker/nginx/Dockerfile
    volumes:
      - ./../public:/var/www/app/public
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_started

  backend:
    container_name: php
    expose:
      - 9000
    build:
      context: ./../
      dockerfile: ./.docker/php/Dockerfile
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - ./../:/var/www/app
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy

  database:
    container_name: postgres
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    build:
      context: ./../
      dockerfile: ./.docker/postgresql/Dockerfile
    volumes:
      - pg-data:/var/lib/postgresql/data/
      - ./postgresql/dumps:/docker-entrypoint-initdb.d
    environment:
      - TZ=${TZ}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    command: ["postgres", "-c", "port=${POSTGRES_PORT}"]
    healthcheck:
      test:
        ["CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  redis:
    container_name: redis
    build:
      context: ./../
      dockerfile: ./.docker/redis/Dockerfile
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - redis-data:/data
    environment:
      - REDIS_PORT=${REDIS_PORT}
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  pg-data:
  redis-data:
